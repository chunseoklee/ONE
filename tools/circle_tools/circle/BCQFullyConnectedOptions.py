# automatically generated by the FlatBuffers compiler, do not modify

# namespace: circle

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class BCQFullyConnectedOptions(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = BCQFullyConnectedOptions()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsBCQFullyConnectedOptions(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    @classmethod
    def BCQFullyConnectedOptionsBufferHasIdentifier(cls, buf, offset, size_prefixed=False):
        return flatbuffers.util.BufferHasIdentifier(buf, offset, b"\x43\x49\x52\x30", size_prefixed=size_prefixed)

    # BCQFullyConnectedOptions
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # BCQFullyConnectedOptions
    def WeightsHiddenSize(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # BCQFullyConnectedOptions
    def FusedActivationFunction(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int8Flags, o + self._tab.Pos)
        return 0

def BCQFullyConnectedOptionsStart(builder):
    builder.StartObject(2)

def Start(builder):
    BCQFullyConnectedOptionsStart(builder)

def BCQFullyConnectedOptionsAddWeightsHiddenSize(builder, weightsHiddenSize):
    builder.PrependInt32Slot(0, weightsHiddenSize, 0)

def AddWeightsHiddenSize(builder, weightsHiddenSize):
    BCQFullyConnectedOptionsAddWeightsHiddenSize(builder, weightsHiddenSize)

def BCQFullyConnectedOptionsAddFusedActivationFunction(builder, fusedActivationFunction):
    builder.PrependInt8Slot(1, fusedActivationFunction, 0)

def AddFusedActivationFunction(builder, fusedActivationFunction):
    BCQFullyConnectedOptionsAddFusedActivationFunction(builder, fusedActivationFunction)

def BCQFullyConnectedOptionsEnd(builder):
    return builder.EndObject()

def End(builder):
    return BCQFullyConnectedOptionsEnd(builder)


class BCQFullyConnectedOptionsT(object):

    # BCQFullyConnectedOptionsT
    def __init__(self):
        self.weightsHiddenSize = 0  # type: int
        self.fusedActivationFunction = 0  # type: int

    @classmethod
    def InitFromBuf(cls, buf, pos):
        bcqfullyConnectedOptions = BCQFullyConnectedOptions()
        bcqfullyConnectedOptions.Init(buf, pos)
        return cls.InitFromObj(bcqfullyConnectedOptions)

    @classmethod
    def InitFromPackedBuf(cls, buf, pos=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, pos)
        return cls.InitFromBuf(buf, pos+n)

    @classmethod
    def InitFromObj(cls, bcqfullyConnectedOptions):
        x = BCQFullyConnectedOptionsT()
        x._UnPack(bcqfullyConnectedOptions)
        return x

    # BCQFullyConnectedOptionsT
    def _UnPack(self, bcqfullyConnectedOptions):
        if bcqfullyConnectedOptions is None:
            return
        self.weightsHiddenSize = bcqfullyConnectedOptions.WeightsHiddenSize()
        self.fusedActivationFunction = bcqfullyConnectedOptions.FusedActivationFunction()

    # BCQFullyConnectedOptionsT
    def Pack(self, builder):
        BCQFullyConnectedOptionsStart(builder)
        BCQFullyConnectedOptionsAddWeightsHiddenSize(builder, self.weightsHiddenSize)
        BCQFullyConnectedOptionsAddFusedActivationFunction(builder, self.fusedActivationFunction)
        bcqfullyConnectedOptions = BCQFullyConnectedOptionsEnd(builder)
        return bcqfullyConnectedOptions
