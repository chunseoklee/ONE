# automatically generated by the FlatBuffers compiler, do not modify

# namespace: circle

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class DilateOptions(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAsDilateOptions(cls, buf, offset):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = DilateOptions()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def DilateOptionsBufferHasIdentifier(cls, buf, offset, size_prefixed=False):
        return flatbuffers.util.BufferHasIdentifier(buf, offset, b"\x43\x49\x52\x30", size_prefixed=size_prefixed)

    # DilateOptions
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

def DilateOptionsStart(builder): builder.StartObject(0)
def DilateOptionsEnd(builder): return builder.EndObject()
